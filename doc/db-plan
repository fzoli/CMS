Rank enum:

int level
String localizationKey
boolean allPermission, protected

- The enumeration ordering gives the hierarchy (the first one has the biggest rank).
  The level attribute modifies the hierarchy, so two enum object can have the same rank.
- If a permission gives the right to modify an other user, you can use the permission only if the other user's rank is smaller than yours.
- If protected is true, the users's rank and permissions can not be modified (and the user is not visible in the permission editor)
- If allPermission is true, the user can use both fix permissions and database stored permissions too.
- There might be helper functions, for example: isDeveloper, isDebug

---

fix-permissions:
user-id, rank, add-permission, edit-permission, write-article

permissions:
id, name, description

permission-groups:
id, name, description, is-inverse

permission-group-permissions:
group-id, permission-id

permission-group-ranks:
group-id, rank-name

user-permissions:
user-name, permission-id

user-permission-groups:
user-name, group-id

pages
  + permission-group-id

activation-codes:
code, user-name

users:
user-name, sha-password, password-hint, is-company, e-mail, registration-date, last-sign-in

user-datas:
id, user-name, type, phone

personal-datas:
id, title, first-name, middle-name, last-name, sex, year-of-birth

company-datas:
id, company-name, tax-number

user-data-addresses:
id, street-id, house-number

loc-countries:
[code], language-code, english-name, native-name

loc-regions:
id, country-code, name

loc-cities:
id, region-id, post-code, name

loc-streets:
id, city-id, name

languages
  + english-name-order
